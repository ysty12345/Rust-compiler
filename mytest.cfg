Program -> DeclList | None
DeclList -> Decl DeclList | Decl
Decl -> FunctionDecl
FunctionDecl -> FunctionHeader Block
FunctionHeader -> fn identifier ( ParamList ) | fn identifier ( ParamList ) -> Type
ParamList -> Param ParamListTail | None
ParamListTail -> , Param ParamListTail | None
Param -> VarDeclInner : Type
VarDeclInner -> mut identifier
Block -> { StmtList }
StmtList -> Stmt StmtList | None

Stmt -> LoopStmt | IfStmt | DeclOnly | DeclAssign | AssignStmt | ExprStmt | ReturnStmt | BreakStmt | ContinueStmt | ;

LoopStmt -> WhileStmt | ForStmt | LoopBlock
WhileStmt -> while Expr Block
ForStmt -> for VarDeclInner in Iterable Block
Iterable -> Expr .. Expr
LoopBlock -> loop Block

IfStmt -> if Expr Block ElsePart
ElsePart -> else IfStmt | else Block | None

DeclOnly -> let VarDeclInner : Type ; | let VarDeclInner ;
DeclAssign -> let VarDeclInner : Type = Expr ; | let VarDeclInner = Expr ;
AssignStmt -> Lvalue = Expr ;
ExprStmt -> Expr ;
ReturnStmt -> return ; | return Expr ;
BreakStmt -> break ;
ContinueStmt -> continue ;

Lvalue -> identifier

Expr -> Expr CmpOp AddExpr | AddExpr
AddExpr -> AddExpr AddOp Term | Term
Term -> Term MulOp Factor | Factor
Factor -> Element
Element -> integer_constant | identifier | ( Expr ) | identifier ( ArgList )
ArgList -> Expr ArgListTail | None
ArgListTail -> , Expr ArgListTail | None

CmpOp -> < | <= | > | >= | == | !=
AddOp -> + | -
MulOp -> * | /

Type -> i32
None -> epsilon
